[{"name":"Character","comment":" Everything related to the character in the game.\n\n@docs Direction, WalkCycle, initialWalkCycle, move, render, walk\n\n","unions":[{"name":"Direction","comment":" 4 directional.\n","args":[],"cases":[["Up",[]],["Down",[]],["Left",[]],["Right",[]]]}],"aliases":[{"name":"WalkCycle","comment":" The walk-cycle animation.\n","args":[],"type":"{ direction : Character.Direction, duration : Basics.Int, index : Basics.Int }"}],"values":[{"name":"initialWalkCycle","comment":" Generate an initial walkcycle based on a given direction.\n","type":"Character.Direction -> Character.WalkCycle"},{"name":"move","comment":" Move the character in one direction.\n","type":"Character.Direction -> Geometry.Coordinates -> Geometry.Coordinates"},{"name":"render","comment":" Render the character.\n","type":"Geometry.Coordinates -> Character.WalkCycle -> Html.Html msg"},{"name":"walk","comment":" Update the character's walkcycle based on a given walking direction.\n","type":"Character.Direction -> Character.WalkCycle -> Character.WalkCycle"}],"binops":[]},{"name":"Game","comment":" This module is responsible for rendering the game.\nYou can build this up in steps.\nIt progresses from `render0` to `render5`.\n\n@docs Options, defaultOptions, render0, render1, render2, render3, render4, render5\n\n","unions":[],"aliases":[{"name":"Options","comment":" The last parameter of the last `render` (nr. 5) function.\nAllows you to show a Pokéball on the screen.\n\nThe `cacheBuster` is necessary to reset the gif animation.\nIdeally this value increases each time you show a Pokémon.\nThis could, for example, be the length of the list of Pokémon you caught.\nAssuming you catch every Pokémon you encounter that is.\n\n","args":[],"type":"{ cacheBuster : Basics.Int, showPokeball : Basics.Bool }"}],"values":[{"name":"defaultOptions","comment":" The default `Options`.\n","type":"Game.Options"},{"name":"render0","comment":" `0`.\n","type":"Html.Html ()"},{"name":"render1","comment":" `1`.\n","type":"Geometry.Coordinates -> Html.Html ()"},{"name":"render2","comment":" `2`.\n","type":"Geometry.Coordinates -> Character.WalkCycle -> Html.Html ()"},{"name":"render3","comment":" `3`.\n","type":"Geometry.Coordinates -> Character.WalkCycle -> Maybe.Maybe Pokemon.Pokemon -> Html.Html ()"},{"name":"render4","comment":" `4`.\n","type":"Geometry.Coordinates -> Character.WalkCycle -> Maybe.Maybe Pokemon.Pokemon -> msg -> Html.Html msg"},{"name":"render5","comment":" `5`.\n\nRender the game.\n\nImportant notes:\n\n  - The `msg` is sent each time you click on \"Use Pokéball\".\n  - If you want to use `render5`, make sure to read the docs on the `Options` type alias above.\n\n","type":"Geometry.Coordinates -> Character.WalkCycle -> Maybe.Maybe Pokemon.Pokemon -> msg -> Game.Options -> Html.Html msg"}],"binops":[]},{"name":"Geometry","comment":" Everything related to geometry.\n\n@docs Coordinates, blockSize, coordinateToPixels, intToPixels, worldSize\n\n","unions":[],"aliases":[{"name":"Coordinates","comment":" 2D coordinates. For example, `characterPosition = { x = 8, y = 7 }`.\n","args":[],"type":"{ x : Basics.Int, y : Basics.Int }"}],"values":[{"name":"blockSize","comment":" The size of one \"block\" (or square).\nTiles are made up from multiple blocks.\n","type":"Basics.Int"},{"name":"coordinateToPixels","comment":" Translate a coordinate into a CSS string using the `px` unit.\n","type":"Basics.Int -> String.String"},{"name":"intToPixels","comment":" Translate an integer into a CSS string using the `px` unit.\n","type":"Basics.Int -> String.String"},{"name":"worldSize","comment":" The size of the area we can walk around in.\n","type":"Geometry.Coordinates"}],"binops":[]},{"name":"Keyboard","comment":" Keyboard stuff.\n\n@docs ArrowKey, keyDecoder, onArrowKeyDown, onArrowKeyUp\n\n","unions":[{"name":"ArrowKey","comment":" A set of arrow keys from your keyboard.\n","args":[],"cases":[["ArrowUp",[]],["ArrowDown",[]],["ArrowLeft",[]],["ArrowRight",[]]]}],"aliases":[],"values":[{"name":"keyDecoder","comment":" Decode the `key` of a keyboard event into a `ArrowKey`.\n","type":"Json.Decode.Decoder Keyboard.ArrowKey"},{"name":"onArrowKeyDown","comment":" Subscribe to \"downs\" of arrow keys.\n","type":"(Keyboard.ArrowKey -> msg) -> Platform.Sub.Sub msg"},{"name":"onArrowKeyUp","comment":" Subscribe to \"ups\" of arrow keys.\n","type":"(Keyboard.ArrowKey -> msg) -> Platform.Sub.Sub msg"}],"binops":[]},{"name":"Pokemon","comment":" Pokémon!\n\n@docs Pokemon, ballAnimationDuration, basedOnTime, fileName, name\n\n","unions":[{"name":"Pokemon","comment":" The Pokémon.\n","args":[],"cases":[["Charmander",[]],["Dragonair",[]],["Mew",[]],["Pikachu",[]],["Snorlax",[]]]}],"aliases":[],"values":[{"name":"ballAnimationDuration","comment":" The duration of the Pokéball gif in milliseconds.\n","type":"Basics.Float"},{"name":"basedOnTime","comment":" Maybe present a Pokémon, based on time.\n","type":"Time.Posix -> Maybe.Maybe Pokemon.Pokemon"},{"name":"fileName","comment":" Find the .gif filename for a given Pokémon.\n","type":"Pokemon.Pokemon -> String.String"},{"name":"name","comment":" Find the name of a given Pokémon.\n","type":"Pokemon.Pokemon -> String.String"}],"binops":[]},{"name":"World","comment":" All the worldly things.\n\n@docs World, anyHighGrassAt, current, renderLayer, runningIntoObstacle\n\n","unions":[],"aliases":[{"name":"World","comment":" The layers of the world.\n","args":[],"type":"{ layer_1 : List.List World.PlacedTile, layer_2 : List.List World.PlacedTile, layer_3 : Geometry.Coordinates -> List.List World.PlacedTile, layer_4 : List.List World.PlacedTile }"}],"values":[{"name":"anyHighGrassAt","comment":" High-grass detection.\n","type":"Geometry.Coordinates -> Basics.Bool"},{"name":"current","comment":" The current world.\n","type":"World.World"},{"name":"renderLayer","comment":" Render a single layer of a world.\n","type":"List.List World.PlacedTile -> Html.Html msg"},{"name":"runningIntoObstacle","comment":" Obstacle detection.\n","type":"World.World -> Geometry.Coordinates -> Basics.Bool"}],"binops":[]}]